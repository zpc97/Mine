一


package p;

class Animal{
	
	 Animal (String name){
		System.out.println("I am a "+name);
	}
	 Animal(){
		System.out.println("I am a animal");
	}
}
class Dog extends Animal{
	public Dog(){
		super("dog");
	}
}
public class test4 {
	public static void main(String [] args){
		Dog dog=new Dog();
	}
}



二

package p;

interface mal{
	int ID=1;
	void breathe();
	void run();
}
interface LandAnimal extends mal{
	void liveOnland();
}
class g implements mal{
	public void breathe(){
		System.out.println("狗在呼吸！！");
	}
	public void run(){
		System.out.println("狗在跑！！");
	}
	public void liveOnland(){
		System.out.println("dog live in land");
	}
}
public class test5 {

	public static void main(String[] args){
		g dog=new g();
		dog.breathe();
		dog.run();
		dog.liveOnland();
		}
	}



三
package p;

public class test6 {

	public static void main(String [] args){
		try{
			int result=divide(4,0);
			System.out.println(result);
		}catch(Exception e){
			System.out.println("捕获的信息为:"+e.getMessage());
			return ;
		}finally{
			System.out.println("此命令必须执行!!!");
		}
		System.out.println("程序继续向下执行....");
	}
	static int divide(int x,int y){
		int result=x/y;
		return result;
	}
}



四

package p;

public class test7 {

	public static void main(String [] args){
		try{
			int result=divide(4,0);
			System.out.println(result);
		}catch (Exception e){
			e.printStackTrace();
		}
}
	static int divide(int x,int y) throws Exception{
		int result=x/y;
		return result;
	}
}

