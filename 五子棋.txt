package gui;

import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.ImageObserver;


import javax.swing.*;

class Five extends JFrame implements MouseListener {

	static public int row = 15;
	static public int col = 15;
	int num1 = 1;
	int num2 = 1;
	int getx = 0;
	int gety = 0;
	int i, j, n = 1;
	static public int[][] zuobiao = new int[row][col];

	public void paint(Graphics g) {
		super.paint(g);
		g.setColor(Color.LIGHT_GRAY);
		g.fill3DRect(20, 60, 840, 840, false);
		for (i = 0; i < 15; i++) {
			g.drawLine(20, 60 + i * 60, 860, 60 + i * 60);
		}
		for (i = 0; i < 15; i++) {
			g.drawLine(20 + i * 60, 60, 20 + i * 60, 900);
		}
		g.setColor(Color.black);
		g.fillOval(252, 292, 15, 15);
		g.fillOval(612, 292, 15, 15);
		g.fillOval(612, 652, 15, 15);
		g.fillOval(252, 652, 15, 15);
		g.fillOval(432, 472, 15, 15);

		for (i = 0; i < 15; i++) {
			for (j = 0; j < 15; j++) {
				if (zuobiao[i][j] == 1) {
					g.setColor(Color.BLACK);
					g.fillOval(9 + i * 60, 50 + j * 60, 25, 25);
				} else if (zuobiao[i][j] == 2) {
					g.setColor(Color.white);
					g.fillOval(9 + i * 60, 50 + j * 60, 25, 25);
				}
			}
		}
	}

	public Five() {
		this.setTitle("五子棋");
		this.setSize(900, 920);
		this.setLocation(400, 50);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
		this.addMouseListener(this);
	}

	public boolean hengxian(int x, int y) {
		if (zuobiao[x][y] == 1) {
			for (i = x + 1; i < 15; i++) {
				if (zuobiao[i][y] == 1) {
					num1++;
				}
			}
			for (i = x - 1; i >= 0; i--) {
				if (zuobiao[i][y] == 1) {
					num1++;
				}
			}
			if (num1 >= 5) {
				return true;
			}
			num1 = 1;
		}
		if (zuobiao[x][y] == 2) {
			for (i = x + 1; i < 15; i++) {
				if (zuobiao[i][y] == 2) {
					num2++;
				}
			}
			for (i = x - 1; i >= 0; i--) {
				if (zuobiao[i][y] == 2) {
					num2++;
				}
			}
			if (num2 >= 5) {
				return true;
			}
			num2 = 1;
		}
		return false;
	}

	public boolean shuxian(int x, int y) {
		if (zuobiao[x][y] == 1) {
			for (i = y + 1; i < 15; i++) {
				if (zuobiao[x][i] == 1) {
					num1++;
				}
			}
			for (i = y - 1; i >= 0; i--) {
				if (zuobiao[x][i] == 1) {
					num1++;
				}
			}
			if (num1 >= 5) {
				return true;
			}
			num1 = 1;
		}
		if (zuobiao[x][y] == 2) {
			for (i = y + 1; i < 15; i++) {
				if (zuobiao[x][i] == 2) {
					num2++;
				}
			}
			for (i = y - 1; i >= 0; i--) {
				if (zuobiao[x][i] == 2) {
					num2++;
				}
			}
			if (num2 >= 5) {
				return true;
			}
			num2 = 1;
		}
		return false;
	}

	public boolean shangxie(int x, int y) {
		if (zuobiao[x][y] == 1) {
			for (i = x - 1, j = 1; i >= 0 && y + j < 15; i--, j++) {
				if (zuobiao[i][y + j] == 1) {
					num1++;
				}
			}
			for (i = x + 1, j = 1; i < 15 && y - j >= 0; i++, j++) {
				if (zuobiao[i][y - j] == 1) {
					num1++;
				}
			}
			if (num1 >= 5) {
				return true;
			}
			num1 = 1;
		}
		if (zuobiao[x][y] == 2) {
			for (i = x - 1, j = 1; i >= 0 && y + j < 15; i--, j++) {
				if (zuobiao[i][y + j] == 2) {
					num2++;
				}
			}
			for (i = x + 1, j = 1; i < 15 && y - j >= 0; i++, j++) {
				if (zuobiao[i][y - j] == 2) {
					num2++;
				}
			}
			if (num2 >= 5) {
				return true;
			}
			num2 = 1;
		}
		return false;
	}

	public boolean xiaxie(int x, int y) {
		if (zuobiao[x][y] == 1) {
			for (i = x - 1, j = 1; i >= 0 && y - j >= 0; i--, j++) {
				if (zuobiao[i][y - j] == 1) {
					num1++;
				}
			}
			for (i = x + 1, j = 1; i < 15 && y + j < 15; i++, j++) {
				if (zuobiao[i][y + j] == 1) {
					num1++;
				}
			}
			if (num1 >= 5) {
				return true;
			}
			num1 = 1;
		}
		if (zuobiao[x][y] == 2) {
			for (i = x - 1, j = 1; i >= 0 && y - j >= 0; i--, j++) {
				if (zuobiao[i][y - j] == 2) {
					num2++;
				}
			}
			for (i = x + 1, j = 1; i < 15 && y + j < 15; i++, j++) {
				if (zuobiao[i][y + j] == 2) {
					num2++;
				}
			}
			if (num2 >= 5) {
				return true;
			}
			num2 = 1;
		}
		return false;
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO 自动生成的方法存根
		getx = e.getX();
		gety = e.getY();
		int x = 0, y = 0;
		if (n % 2 == 1) {
			for (i = 0; i < 15; i++) {
				if (getx >= (i * 60 - 10) && getx <= (50 + i * 60)) {
					x = i;
				}
			}
			for (j = 0; j < 15; j++) {
				if (gety >= (30 + j * 60) && gety <= (90 + j * 60)) {
					y = j;
				}
			}
			if (zuobiao[x][y] == 0) {
				zuobiao[x][y] = 1;
				n++;
			} else {

			}
		} else if (n % 2 == 0) {
			for (i = 0; i < 15; i++) {
				if (getx >= (i * 60 - 10) && getx <= (50 + i * 60)) {
					x = i;
				}
			}
			for (j = 0; j < 15; j++) {
				if (gety >= (30 + j * 60) && gety <= (90 + j * 60)) {
					y = j;
				}
			}
			if (zuobiao[x][y] == 0) {
				zuobiao[x][y] = 2;
				n++;
			} else {

			}
		}
		this.repaint();
		if (hengxian(x, y) || shuxian(x, y) || shangxie(x, y) || xiaxie(x, y)) {

			JFrame jf = new JFrame("游戏结束");
			jf.setSize(600, 400);
			jf.setLayout(new BorderLayout());
			jf.setLocation(600, 400);
			jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			jf.setVisible(true);
			JPanel jp = new JPanel();
			setLayout(null);
			JTextArea text = new JTextArea(3, 3);
			Font font = new Font("宋体", Font.BOLD, 50);
			text.setFont(font);
			if (n % 2 == 0) {
				text.setText("黑棋五连，游戏结束");
			} else {
				text.setText("白棋五连，游戏结束");
			}
			text.setEditable(false);
			JButton jb1 = new JButton("重新开始");
			JButton jb2 = new JButton("退出");
			jb1.setBounds(100, 150, 50, 25);
			jb2.setBounds(100, 150, 50, 25);
			jp.add(jb1);
			jp.add(jb2);
			jf.add(text, BorderLayout.NORTH);
			jf.add(jp, BorderLayout.SOUTH);
		}
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO 自动生成的方法存根

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO 自动生成的方法存根

	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO 自动生成的方法存根

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO 自动生成的方法存根

	}

}

public class Gobang {
	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		new Five();
	}

}
