package gui;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;


public class c extends JFrame{

	double flag1,flag2,flag3;
	int n,len=0;
	int max=16;
	JButton jb[]=new JButton[max];
	JPanel jp1,jp2;
	JTextArea jta;
	int i,k;
	
	public c(){
		
		jb[0]=new JButton("0");
		jb[1]=new JButton("1");
		jb[2]=new JButton("2");
		jb[3]=new JButton("3");
		jb[4]=new JButton("4");
		jb[5]=new JButton("5");
		jb[6]=new JButton("6");
		jb[7]=new JButton("7");
		jb[8]=new JButton("8");
		jb[9]=new JButton("9");
		jb[10]=new JButton(".");
		jb[11]=new JButton("+");
		jb[12]=new JButton("-");
		jb[13]=new JButton("*");
		jb[14]=new JButton("/"); 
		jb[15]=new JButton("=");
		for(i=0;i<16;i++){
			jb[i].setFont(new Font("宋体", Font.BOLD, 40));
		}
		jp1=new JPanel();
		jp2=new JPanel();
		jta=new JTextArea(33,33);
		jta.setFont(new Font("宋体", Font.BOLD, 25));
		jp1.add(jta);
		jp2.setLayout(new GridLayout(4,4));
		for(int j=0;j<16;j++){
			jp2.add(jb[j]);
		}
		this.setLayout(new GridLayout(2,1));
		this.add(jp1);
		this.add(jp2);
		this.setSize(500,500);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
		for(k=0;k<10;k++){
			act(k);
		}
		jb[11].addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO 自动生成的方法存根
				if(flag2==0){
					;
				}
				flag2=flag1;
				n=1;
				jta.setText("");
			}
		});
		jb[12].addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO 自动生成的方法存根
				if(flag2==0){
					;
				}
				flag2=flag1;
				n=2;
				jta.setText("");
			}
		});
		
		jb[13].addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO 自动生成的方法存根
				if(flag2==0){
					;
				}
				flag2=flag1;
				n=3;
				jta.setText("");
			}
		});
		jb[14].addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO 自动生成的方法存根
				if(flag2==0){
					;
				}
				flag2=flag1;
				n=4;
				jta.setText("");
			}
		});
		jb[15].addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO 自动生成的方法存根
				double result;
				if(n==1){
					result=flag2+flag1;
					jta.setText(flag2+"+"+flag1+"="+result);
				}else if(n==2){
					result=flag2-flag1;
					jta.setText(flag2+"-"+flag1+"="+result);
				}else if(n==3){
					result=flag1*flag2;
					jta.setText(flag2+"*"+flag1+"="+result);
				}else if(n==4){
					result=flag2/flag1;
					jta.setText(flag2+"/"+flag1+"="+result);
				}
				
				}
			});
	}
	
	
	public void act(int a){
		jb[a].addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO 自动生成的方法存根
				if(a==0&&len==0){
					;
				}
				jta.setText(jta.getText()+a);
				flag1=Double.parseDouble(jta.getText());
			}
		});
	}
	
	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		new c();
	}

}
